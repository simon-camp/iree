################################################################################
# Autogenerated by build_tools/bazel_to_cmake/bazel_to_cmake.py from           #
# runtime/src/iree/vm/test/BUILD.bazel                                         #
#                                                                              #
# Use iree_cmake_extra_content from iree/build_defs.oss.bzl to add arbitrary   #
# CMake-only content.                                                          #
#                                                                              #
# To disable autogeneration for this file entirely, delete this header.        #
################################################################################

iree_add_all_subdirs()

if(NOT IREE_BUILD_COMPILER OR NOT IREE_BUILD_TESTS)
  return()
endif()

iree_c_embed_data(
  NAME
    all_bytecode_modules_c
  SRCS
    "arithmetic_ops.vmfb"
    "arithmetic_ops_f32.vmfb"
    "arithmetic_ops_f64.vmfb"
    "arithmetic_ops_i64.vmfb"
    "assignment_ops.vmfb"
    "assignment_ops_f32.vmfb"
    "assignment_ops_f64.vmfb"
    "assignment_ops_i64.vmfb"
    "buffer_ops.vmfb"
    "call_ops.vmfb"
    "comparison_ops.vmfb"
    "comparison_ops_f32.vmfb"
    "comparison_ops_f64.vmfb"
    "comparison_ops_i64.vmfb"
    "control_flow_ops.vmfb"
    "conversion_ops.vmfb"
    "conversion_ops_f32.vmfb"
    "conversion_ops_f64.vmfb"
    "conversion_ops_i64.vmfb"
    "global_ops.vmfb"
    "global_ops_f32.vmfb"
    "global_ops_f64.vmfb"
    "global_ops_i64.vmfb"
    "list_ops.vmfb"
    "list_ops_f32.vmfb"
    "list_ops_f64.vmfb"
    "list_ops_i64.vmfb"
    "list_variant_ops.vmfb"
    "ref_ops.vmfb"
    "shift_ops.vmfb"
    "shift_ops_i64.vmfb"
  C_FILE_OUTPUT
    "all_bytecode_modules.c"
  H_FILE_OUTPUT
    "all_bytecode_modules.h"
  FLATTEN
  PUBLIC
)

iree_bytecode_module(
  NAME
    arithmetic_ops
  SRC
    "arithmetic_ops.mlir"
  FLAGS
    "--compile-mode=vm"
  PUBLIC
)

iree_bytecode_module(
  NAME
    arithmetic_ops_f32
  SRC
    "arithmetic_ops_f32.mlir"
  FLAGS
    "--compile-mode=vm"
    "--iree-vm-target-extension-f32=true"
  PUBLIC
)

iree_bytecode_module(
  NAME
    arithmetic_ops_f64
  SRC
    "arithmetic_ops_f64.mlir"
  FLAGS
    "--compile-mode=vm"
    "--iree-vm-target-extension-f64=true"
  PUBLIC
)

iree_bytecode_module(
  NAME
    arithmetic_ops_i64
  SRC
    "arithmetic_ops_i64.mlir"
  FLAGS
    "--compile-mode=vm"
  PUBLIC
)

iree_bytecode_module(
  NAME
    assignment_ops
  SRC
    "assignment_ops.mlir"
  FLAGS
    "--compile-mode=vm"
  PUBLIC
)

iree_bytecode_module(
  NAME
    assignment_ops_f32
  SRC
    "assignment_ops_f32.mlir"
  FLAGS
    "--compile-mode=vm"
    "--iree-vm-target-extension-f32=true"
  PUBLIC
)

iree_bytecode_module(
  NAME
    assignment_ops_f64
  SRC
    "assignment_ops_f64.mlir"
  FLAGS
    "--compile-mode=vm"
    "--iree-vm-target-extension-f64=true"
  PUBLIC
)

iree_bytecode_module(
  NAME
    assignment_ops_i64
  SRC
    "assignment_ops_i64.mlir"
  FLAGS
    "--compile-mode=vm"
  PUBLIC
)

iree_bytecode_module(
  NAME
    buffer_ops
  SRC
    "buffer_ops.mlir"
  FLAGS
    "--compile-mode=vm"
  PUBLIC
)

iree_bytecode_module(
  NAME
    call_ops
  SRC
    "call_ops.mlir"
  FLAGS
    "--compile-mode=vm"
  PUBLIC
)

iree_bytecode_module(
  NAME
    comparison_ops
  SRC
    "comparison_ops.mlir"
  FLAGS
    "--compile-mode=vm"
  PUBLIC
)

iree_bytecode_module(
  NAME
    comparison_ops_f32
  SRC
    "comparison_ops_f32.mlir"
  FLAGS
    "--compile-mode=vm"
    "--iree-vm-target-extension-f32=true"
  PUBLIC
)

iree_bytecode_module(
  NAME
    comparison_ops_f64
  SRC
    "comparison_ops_f64.mlir"
  FLAGS
    "--compile-mode=vm"
    "--iree-vm-target-extension-f64=true"
  PUBLIC
)

iree_bytecode_module(
  NAME
    comparison_ops_i64
  SRC
    "comparison_ops_i64.mlir"
  FLAGS
    "--compile-mode=vm"
  PUBLIC
)

iree_bytecode_module(
  NAME
    control_flow_ops
  SRC
    "control_flow_ops.mlir"
  FLAGS
    "--compile-mode=vm"
  PUBLIC
)

iree_bytecode_module(
  NAME
    conversion_ops
  SRC
    "conversion_ops.mlir"
  FLAGS
    "--compile-mode=vm"
  PUBLIC
)

iree_bytecode_module(
  NAME
    conversion_ops_f32
  SRC
    "conversion_ops_f32.mlir"
  FLAGS
    "--compile-mode=vm"
    "--iree-vm-target-extension-f32=true"
  PUBLIC
)

iree_bytecode_module(
  NAME
    conversion_ops_f64
  SRC
    "conversion_ops_f64.mlir"
  FLAGS
    "--compile-mode=vm"
    "--iree-vm-target-extension-f64=true"
  PUBLIC
)

iree_bytecode_module(
  NAME
    conversion_ops_i64
  SRC
    "conversion_ops_i64.mlir"
  FLAGS
    "--compile-mode=vm"
  PUBLIC
)

iree_bytecode_module(
  NAME
    global_ops
  SRC
    "global_ops.mlir"
  FLAGS
    "--compile-mode=vm"
  PUBLIC
)

iree_bytecode_module(
  NAME
    global_ops_f32
  SRC
    "global_ops_f32.mlir"
  FLAGS
    "--compile-mode=vm"
    "--iree-vm-target-extension-f32=true"
  PUBLIC
)

iree_bytecode_module(
  NAME
    global_ops_f64
  SRC
    "global_ops_f64.mlir"
  FLAGS
    "--compile-mode=vm"
    "--iree-vm-target-extension-f64=true"
  PUBLIC
)

iree_bytecode_module(
  NAME
    global_ops_i64
  SRC
    "global_ops_i64.mlir"
  FLAGS
    "--compile-mode=vm"
  PUBLIC
)

iree_bytecode_module(
  NAME
    list_ops
  SRC
    "list_ops.mlir"
  FLAGS
    "--compile-mode=vm"
  PUBLIC
)

iree_bytecode_module(
  NAME
    list_ops_f32
  SRC
    "list_ops_f32.mlir"
  FLAGS
    "--compile-mode=vm"
  PUBLIC
)

iree_bytecode_module(
  NAME
    list_ops_f64
  SRC
    "list_ops_f64.mlir"
  FLAGS
    "--compile-mode=vm"
  PUBLIC
)

iree_bytecode_module(
  NAME
    list_ops_i64
  SRC
    "list_ops_i64.mlir"
  FLAGS
    "--compile-mode=vm"
  PUBLIC
)

iree_bytecode_module(
  NAME
    list_variant_ops
  SRC
    "list_variant_ops.mlir"
  FLAGS
    "--compile-mode=vm"
  PUBLIC
)

iree_bytecode_module(
  NAME
    ref_ops
  SRC
    "ref_ops.mlir"
  FLAGS
    "--compile-mode=vm"
  PUBLIC
)

iree_bytecode_module(
  NAME
    shift_ops
  SRC
    "shift_ops.mlir"
  FLAGS
    "--compile-mode=vm"
  PUBLIC
)

iree_bytecode_module(
  NAME
    shift_ops_i64
  SRC
    "shift_ops_i64.mlir"
  FLAGS
    "--compile-mode=vm"
  PUBLIC
)

iree_c_embed_data(
  NAME
    async_bytecode_modules_c
  SRCS
    "async_ops.vmfb"
  C_FILE_OUTPUT
    "async_bytecode_modules.c"
  H_FILE_OUTPUT
    "async_bytecode_modules.h"
  FLATTEN
  PUBLIC
)

iree_bytecode_module(
  NAME
    async_ops
  SRC
    "async_ops.mlir"
  FLAGS
    "--compile-mode=vm"
  PUBLIC
)

### BAZEL_TO_CMAKE_PRESERVES_ALL_CONTENT_BELOW_THIS_LINE ###
